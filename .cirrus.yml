task:
  env:
    CYPRESS_INSTALL_BINARIES: 0
  container:
    image: node:8
  always:
    dependencies_cache:
      folder: node_modules
      fingerprint_script: |
        cat package.json
        cat package-lock.json
      populate_script: npm ci
  matrix:
    - name: Lint
      script: npm lint
    - name: Core Tests
      script: npm test:core
      junit_result_artifacts:
        path: junit/core/results.xml
        type: application/xml
        format: junit
    - name: Entrypoint Tests
      script: npm test:entrypoint
      junit_result_artifacts:
        path: junit/core/results.xml
        type: application/xml
        format: junit
    - name: 'Prettier Check (quick fix: npm run prettier)'
      script: npm run prettier:check
    - name: Services
      script: npm run test:services:pr:prepare
      junit_result_artifacts:
        path: junit/core/results.xml
        type: application/xml
        format: junit

# Switch to new matrix where container will be modified
task:
  name: Package Tests
  env:
    CYPRESS_INSTALL_BINARY: 0
  always:
    dependencies_cache:
      folder: node_modules
      fingerprint_script: |
        cat package.json
        cat package-lock.json
      populate_script: npm ci
  script: npm test:package
  junit_result_artifacts:
    path: junit/core/results.xml
    type: application/xml
    format: junit
  matrix:
    - container:
        image: node:latest
    - container:
        image: node:8
    - container:
        image: node:10
    - container:
        image: node:12

Danger_task:
  container:
    image: node:8
  env:
    CYPRESS_INSTALL_BINARY: 0
    NODE_ENV: test
  always:
    dependencies_cache:
      folder: node_modules
      fingerprint_script: |
        cat package.json
        cat package-lock.json
      populate_script: npm ci
  script: npm danger ci

  frontend:
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # https://github.com/badges/shields/issues/1937
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm ci
          environment:
            CYPRESS_INSTALL_BINARY: 0

      - run:
          name: Prepare frontend tests
          command: npm run defs && npm run features

      - run:
          name: Check types
          command: npm run check-types:frontend

      - run:
          name: Frontend unit tests
          environment:
            mocha_reporter: mocha-junit-reporter
            MOCHA_FILE: junit/frontend/results.xml
          when: always
          command: npm run test:frontend

      - store_test_results:
          path: junit

      - run:
          name: Frontend build completes successfully
          when: always
          command: npm run build

  package:
    machine: true

    <<: *package_steps

  services:
    docker:
      - image: circleci/node:8

    <<: *services_steps

  services@node-latest:
    docker:
      - image: circleci/node:latest

    <<: *services_steps

  e2e:
    docker:
      - image: cypress/base:8
    steps:
      - checkout

      - restore_cache:
          name: Restore node_modules
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # https://github.com/badges/shields/issues/1937
            - v2-dependencies-

      - restore_cache:
          name: Restore Cypress binary
          keys:
            - v2-cypress-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Install dependencies
          command: npm ci

      - run:
          name: Frontend build
          command: GATSBY_BASE_URL=http://localhost:8080 npm run build

      - run:
          name: Run tests
          environment:
            CYPRESS_REPORTER: junit
            MOCHA_FILE: junit/e2e/results.xml
          command: npm run e2e-on-build

      - store_test_results:
          path: junit

      - store_artifacts:
          path: cypress/videos

      - store_artifacts:
          path: cypress/screenshots

      - save_cache:
          name: Cache Cypress binary
          paths:
            # https://docs.cypress.io/guides/getting-started/installing-cypress.html#Binary-cache
            - ~/.cache/Cypress
          key: v2-cypress-dependencies-{{ checksum "package-lock.json" }}

workflows:
  version: 2

  on-commit:
    jobs:
      - main:
          filters:
            branches:
              ignore: gh-pages
      - main@node-latest:
          filters:
            branches:
              ignore: gh-pages
      - integration@node-latest:
          filters:
            branches:
              ignore: gh-pages
      - frontend:
          filters:
            branches:
              ignore: gh-pages
      - package:
          filters:
            branches:
              ignore: gh-pages
      - services:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - services@node-latest:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - danger:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
                - /dependabot\/.*/
      - e2e:
          filters:
            branches:
              ignore: gh-pages
