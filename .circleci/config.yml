version: 2

main_steps: &main_steps
  steps:
    - checkout

    - restore_cache:
        keys:
          - v2-dependencies-{{ checksum "package-lock.json" }}
          # https://github.com/badges/shields/issues/1937
          - v2-dependencies-

    - run:
        name: Install dependencies
        command: npm ci
        environment:
          # https://docs.cypress.io/guides/getting-started/installing-cypress.html#Skipping-installation
          # We don't need to install the Cypress binary in jobs that aren't actually running Cypress.
          CYPRESS_INSTALL_BINARY: 0

    - save_cache:
        paths:
          - node_modules
        key: v2-dependencies-{{ checksum "package-lock.json" }}

    - run:
        name: Linter
        when: always
        command: npm run lint

    - run:
        name: Core tests
        when: always
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/core/results.xml
        command: npm run test:core

    - run:
        name: Entrypoint tests
        when: always
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/entrypoint/results.xml
        command: npm run test:entrypoint

    - store_test_results:
        path: junit

    - run:
        name: 'Prettier check (quick fix: `npm run prettier`)'
        when: always
        command: npm run prettier:check

integration_steps: &integration_steps
  steps:
    - checkout

    - restore_cache:
        keys:
          - v2-dependencies-{{ checksum "package-lock.json" }}
          # https://github.com/badges/shields/issues/1937
          - v2-dependencies-

    - run:
        name: Install dependencies
        command: npm ci
        environment:
          CYPRESS_INSTALL_BINARY: 0

    - run:
        name: Integration tests
        when: always
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/integration/results.xml
        command: npm run test:integration

    - store_test_results:
        path: junit

services_steps: &services_steps
  steps:
    - checkout

    - restore_cache:
        keys:
          - v2-dependencies-{{ checksum "package-lock.json" }}
          # https://github.com/badges/shields/issues/1937
          - v2-dependencies-

    - run:
        name: Install dependencies
        command: npm ci
        environment:
          CYPRESS_INSTALL_BINARY: 0

    - run:
        name: Identify services tagged in the PR title
        command: npm run test:services:pr:prepare

    - run:
        name: Run tests for tagged services
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/services/results.xml
        command: npm run test:services:pr:run

    - store_test_results:
        path: junit

run_package_tests: &run_package_tests
  when: always
  command: |
    # https://discuss.circleci.com/t/switch-nodejs-version-on-machine-executor-solved/26675/3
    set +e
    export NVM_DIR="/opt/circleci/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
    nvm install $NODE_VERSION
    nvm use $NODE_VERSION
    node --version
    npm run test:package

package_steps: &package_steps
  steps:
    - checkout

    - restore_cache:
        keys:
          - v2-dependencies-{{ checksum "package-lock.json" }}
          # https://github.com/badges/shields/issues/1937
          - v2-dependencies-

    - run:
        name: Install dependencies
        command: |
          set +e
          export NVM_DIR="/opt/circleci/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install v12
          nvm use v12
          npm install -g npm
          npm ci
        environment:
          CYPRESS_INSTALL_BINARY: 0

    # Run the package tests on each currently supported node version. See:
    # https://github.com/badges/shields/blob/master/gh-badges/README.md#node-version-support

    - run:
        <<: *run_package_tests
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/gh-badges/v8/results.xml
          NODE_VERSION: v8
        name: Run package tests on Node 8

    - run:
        <<: *run_package_tests
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/gh-badges/v10/results.xml
          NODE_VERSION: v10
        name: Run package tests on Node 10

    - run:
        <<: *run_package_tests
        environment:
          mocha_reporter: mocha-junit-reporter
          MOCHA_FILE: junit/gh-badges/v12/results.xml
          NODE_VERSION: v12
        name: Run package tests on Node 12

    - store_test_results:
        path: junit

jobs:
  npm-install:
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm ci
          environment:
            CYPRESS_INSTALL_BINARY: 0

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}

  main:
    docker:
      - image: circleci/node:8

    <<: *main_steps

  main@node-latest:
    docker:
      - image: circleci/node:latest

    <<: *main_steps

  integration:
    docker:
      - image: circleci/node:8
      - image: redis

    <<: *integration_steps

  integration@node-latest:
    docker:
      - image: circleci/node:latest
      - image: redis

    <<: *integration_steps

  danger:
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # https://github.com/badges/shields/issues/1937
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm ci
          environment:
            CYPRESS_INSTALL_BINARY: 0

      - run:
          name: Danger
          when: always
          environment:
            # https://github.com/gatsbyjs/gatsby/pull/11555
            NODE_ENV: test
          command: npm run danger ci

  frontend:
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # https://github.com/badges/shields/issues/1937
            - v2-dependencies-

      - run:
          name: Install dependencies
          command: npm ci
          environment:
            CYPRESS_INSTALL_BINARY: 0

      - run:
          name: Prepare frontend tests
          command: npm run defs && npm run features

      - run:
          name: Frontend unit tests
          environment:
            mocha_reporter: mocha-junit-reporter
            MOCHA_FILE: junit/frontend/results.xml
          command: npm run test:frontend

      - store_test_results:
          path: junit

      - run:
          name: Frontend build completes successfully
          when: always
          command: npm run build

  package:
    machine: true

    <<: *package_steps

  services:
    docker:
      - image: circleci/node:8

    <<: *services_steps

  services@node-latest:
    docker:
      - image: circleci/node:latest

    <<: *services_steps

  e2e:
    docker:
      - image: cypress/base:8
    steps:
      - checkout

      - restore_cache:
          name: Restore node_modules
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            # https://github.com/badges/shields/issues/1937
            - v2-dependencies-

      - restore_cache:
          name: Restore Cypress binary
          keys:
            - v2-cypress-dependencies-{{ checksum "package-lock.json" }}

      - run:
          name: Install dependencies
          command: npm ci

      - run:
          name: Frontend build
          command: GATSBY_BASE_URL=http://localhost:8080 npm run build

      - run:
          name: Run tests
          environment:
            CYPRESS_REPORTER: junit
            MOCHA_FILE: junit/e2e/results.xml
          command: npm run e2e-on-build

      - store_test_results:
          path: junit

      - store_artifacts:
          path: cypress/videos

      - store_artifacts:
          path: cypress/screenshots

      - save_cache:
          name: Cache Cypress binary
          paths:
            # https://docs.cypress.io/guides/getting-started/installing-cypress.html#Binary-cache
            - ~/.cache/Cypress
          key: v2-cypress-dependencies-{{ checksum "package-lock.json" }}

workflows:
  version: 2

  on-commit:
    jobs:
      - main:
          filters:
            branches:
              ignore: gh-pages
      - main@node-latest:
          filters:
            branches:
              ignore: gh-pages
      - integration@node-latest:
          filters:
            branches:
              ignore: gh-pages
      - frontend:
          filters:
            branches:
              ignore: gh-pages
      - package:
          filters:
            branches:
              ignore: gh-pages
      - services:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - services@node-latest:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
      - danger:
          filters:
            branches:
              ignore:
                - master
                - gh-pages
                - /dependabot\/.*/
      - e2e:
          filters:
            branches:
              ignore: gh-pages
  # on-commit-with-cache:
  #   jobs:
  #     - npm-install:
  #         filters:
  #           branches:
  #             ignore: gh-pages
  #     - main:
  #         requires:
  #           - npm-install
  #     - main@node-latest:
  #         requires:
  #           - npm-install
  #     - frontend:
  #         requires:
  #           - npm-install
  #     - services:
  #         requires:
  #           - npm-install
  #         filters:
  #           branches:
  #             ignore: master
  #     - services@node-latest:
  #         requires:
  #           - npm-install
  #         filters:
  #           branches:
  #             ignore: master
  #     - danger:
  #         requires:
  #           - npm-install
  #         filters:
  #           branches:
  #             ignore: /dependabot\/.*/
