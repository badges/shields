'use strict'

const Joi = require('joi')
const t = (module.exports = require('../create-service-tester')())
const { colorScheme } = require('../test-helpers')
const {
  twoVulnerabilitiesSvg,
  zeroVulnerabilitiesSvg,
} = require('./snyk-test-helpers')

t.create('live: valid package latest version')
  .get('/mocha.json')
  .timeout(7500)
  .expectJSONTypes(
    Joi.object().keys({
      name: 'vulnerabilities',
      value: Joi.number().required(),
    })
  )

t.create('live: valid scoped package latest version')
  .get('/@babel/core.json')
  .timeout(7500)
  .expectJSONTypes(
    Joi.object().keys({
      name: 'vulnerabilities',
      value: Joi.number().required(),
    })
  )

t.create('live: non existent package')
  .get('/mochaabcdef.json')
  .timeout(7500)
  .expectJSON({
    name: 'vulnerabilities',
    value: 'npm package is invalid or does not exist',
  })

t.create('live: valid package specific version')
  .get('/mocha@4.0.0.json?style=_shields_test')
  .expectJSON({
    name: 'vulnerabilities',
    value: '1',
    colorB: colorScheme.red,
  })

t.create('live: non existent package version')
  .get('/gh-badges@0.3.4.json')
  .timeout(7500)
  .expectJSON({
    name: 'vulnerabilities',
    value: 'npm package is invalid or does not exist',
  })

t.create('package has no vulnerabilities')
  .get('/mocha.json?style=_shields_test')
  .intercept(nock =>
    nock('https://snyk.io/test/npm/mocha')
      .get('/badge.svg')
      .reply(200, zeroVulnerabilitiesSvg)
  )
  .expectJSON({
    name: 'vulnerabilities',
    value: '0',
    colorB: colorScheme.brightgreen,
  })

t.create('package has vulnerabilities')
  .get('/mocha.json?style=_shields_test')
  .intercept(nock =>
    nock('https://snyk.io/test/npm/mocha')
      .get('/badge.svg')
      .reply(200, twoVulnerabilitiesSvg)
  )
  .expectJSON({
    name: 'vulnerabilities',
    value: '2',
    colorB: colorScheme.red,
  })

t.create('package not found')
  .get('/not-mocha-fake-ish@13.0.0.json?style=_shields_test')
  .intercept(nock =>
    nock('https://snyk.io/test/npm/not-mocha-fake-ish@13.0.0')
      .get('/badge.svg')
      .reply(200, '<html>foo</html>')
  )
  .expectJSON({
    name: 'vulnerabilities',
    value: 'npm package is invalid or does not exist',
    colorB: colorScheme.red,
  })
